---
import { POSTS_PER_PAGE } from 'astro:env/server';
import BaseLayout from '@src/layouts/BaseLayout.astro';
import { tags, posts } from '@src/lib/data';
import Post from '@src/components/common/Post.astro';
import Pagination from '@src/components/common/Pagination.astro';
import { generatePagination } from '@src/lib/utils';
import type { SimplifiedPost } from '@src/lib/types';

export async function getStaticPaths({ paginate }: { paginate: Function }) {
	return tags.flatMap((tag) => {
		const filteredPosts = posts.filter((post) => post.tags.some((postCategory) => postCategory.id === tag.id));
		return paginate(filteredPosts, {
			params: { slug: tag.slug },
			props: { tag: tag },
			pageSize: POSTS_PER_PAGE
		});
	});
}
// All paginated data is passed on the "page" prop
const { page, tag } = Astro.props;
const pagination = generatePagination(
  posts.length,
  page.currentPage,
  POSTS_PER_PAGE
);
const title = `Posts tagged with ${tag.name}`;
const subTitle = `Page ${page.currentPage} of ${page.lastPage}`;
if (page.currentPage === 1) {
	return Astro.redirect('/tag/' + tag.slug + '/');
}
---
<BaseLayout title={title + ' - ' + subTitle} description={title + ' - ' + subTitle}>
	<div class='container'>
		<div class='mb-12'>
			<h2 class='text-gray-700 font-semibold text-xl mb-4 flex justify-between gap-3'>
				<div>Posts</div>
				<div>Page {page.currentPage} of {page.lastPage}</div>
			</h2>
      {page.data.length > 0 ?
        <>
          <div class='grid grid-cols-3 gap-6' transition:name='post-grid'>
            {page.data.map((post: SimplifiedPost) => <Post post={post} />)}
          </div>
          <Pagination pagination={pagination} basePath={`/tag/${tag.slug}/`} />
        </>
        :
        <div class="p-8 text-center">No posts under yet</div>
      }
		</div>
	</div>
</BaseLayout>
