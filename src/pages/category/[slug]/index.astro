---
import { POSTS_PER_PAGE } from 'astro:env/server';
import { categories, posts } from '@src/lib/data';
import BaseLayout from '@src/layouts/BaseLayout.astro';
import { generatePagination } from '@src/lib/utils';
import Post from '@src/components/common/Post.astro';
import Pagination from '@src/components/common/Pagination.astro';

export const getStaticPaths = () => {
	return categories.map((category) => {
		return {
			params: { slug: category.slug },
			props: { category }
		};
	});
};

// All paginated data is passed on the "page" prop
const { category }: { [x: string]: any } = Astro.props;
const categoryPosts = posts.filter((post) => post.categories.some((postCategory) => postCategory.id === category.id));
const categoryPostsPageOne = categoryPosts.slice(0, POSTS_PER_PAGE);
const pagination = generatePagination(categoryPosts.length, 1, POSTS_PER_PAGE);
const title = `Posts tagged with ${category.name}`;
const subTitle = `Page ${1} of ${pagination.totalPages}`;
---

<BaseLayout title={title + ' - ' + subTitle} description={title + ' - ' + subTitle}>
	<div class='container'>
		<div class='mb-12'>
			<h2 class='text-gray-700 font-semibold text-xl mb-4 flex justify-between gap-3'>
				<div>Posts</div>
				<div>Page 1 of {pagination.totalPages}</div>
			</h2>
      {
				categoryPostsPageOne.length > 0 ? (
					<>
            <div class='grid grid-cols-3 gap-6' transition:name='post-grid'>
              {categoryPostsPageOne.map((post) => <Post post={post} />)}
            </div>
            <Pagination pagination={pagination} basePath={`/category/${category.slug}/`} />
          </>
				) : (
					<div class='p-8 text-center'>No posts under this category yet</div>
				)
			}

		</div>
	</div>
</BaseLayout>
