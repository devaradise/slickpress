---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseLayout from '@src/layouts/BaseLayout.astro';
import PostList from '@src/components/PostList.astro';
import { slugify, unslugify } from '@src/utils';
import RecommendedPosts from '../../../../components/widgets/RecommendedPosts.astro';

type BlogPost = CollectionEntry<'blog'>;

export async function getStaticPaths({ paginate }: { paginate: Function }) {
	const allPosts: BlogPost[] = (await getCollection('blog')).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
	const uniqueTags = [
		...new Set(
			allPosts
				.map((post) => post.data.tags)
				.flat()
				.filter((tag) => !!tag)
		)
	];
	return uniqueTags.flatMap((tag) => {
		const filteredPosts = allPosts.filter((post) => post.data.tags?.includes(tag || ''));
		return paginate(filteredPosts, {
			params: { tag: slugify(tag || '') },
			pageSize: 10
		});
	});
}
// All paginated data is passed on the "page" prop
const { page }: { [x: string]: any } = Astro.props;
const { tag } = Astro.params;
const title = `Posts tagged with ${unslugify(tag || '')}`;
const subTitle = `Page ${page.currentPage} of ${page.lastPage}`;
if (page.currentPage === 1) {
	return Astro.redirect('/tags/' + tag);
}
---

<BaseLayout title={title + ' - ' + subTitle} description={title + ' - ' + subTitle}>
	<div class='container lg:grid lg:grid-cols-12 space-y-8 lg:space-y-0 lg:gap-8 px-3'>
		<main class='lg:col-span-8'>
			<div class='sm:flex text-2xl sm:justify-between text-2xl sm:items-end border-b border-[var(--soft-border-color)] pb-4 mb-4'>
				<h1 class='font-bold text-2xl sm:text-3xl'>{title}</h1>
				<h3 class='font-bold text-xl text-gray-600 dark:text-gray-300'>{subTitle}</h3>
			</div>
			<PostList posts={page.data} />
			<nav class='flex justify-between gap-4 mt-8 leading-tight' aria-label='Blog list page navigation'>
				<a
					class='flex gap-2 items-center font-semibold text-inherit hover:text-[var(--color-primary)] bg-[var(--background-surface-color)] py-2 px-4 rounded-3xl border border-[var(--soft-border-color)]'
					href={page.url.prev}
				>
					<svg
						xmlns='http://www.w3.org/2000/svg'
						width='24'
						height='24'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
						class='lucide lucide-chevrons-left'><path d='m11 17-5-5 5-5'></path><path d='m18 17-5-5 5-5'></path></svg
					>
					Newer Entries
				</a>
				{
					page.url.next && (
						<a
							class='flex gap-2 items-center text-right font-semibold text-inherit hover:text-[var(--color-primary)] bg-[var(--background-surface-color)] py-2 px-4 rounded-3xl border border-[var(--soft-border-color)]'
							href={page.url.next}>
							Older Entries
							<svg
								xmlns='http://www.w3.org/2000/svg'
								width='24'
								height='24'
								viewBox='0 0 24 24'
								fill='none'
								stroke='currentColor'
								stroke-width='2'
								stroke-linecap='round'
								stroke-linejoin='round'
								class='lucide lucide-chevrons-right'>
								<>
									<path d='m6 17 5-5-5-5' />
									<path d='m13 17 5-5-5-5' />
								</>
							</svg>
						</a>
					)
				}
			</nav>
		</main>
		<aside class='col-span-4'><RecommendedPosts /></aside>
	</div>
</BaseLayout>
