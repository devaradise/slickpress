---
import { POSTS_PER_PAGE } from 'astro:env/server';
import BaseLayout from '@src/layouts/BaseLayout.astro';
import { users, posts } from '@src/lib/data';
import Post from '@src/components/common/Post.astro';
import Pagination from '@src/components/common/Pagination.astro';
import { generatePagination } from '@src/lib/utils';
import type { SimplifiedPost } from '@src/lib/types';

export async function getStaticPaths({ paginate }: { paginate: Function }) {
	return users.flatMap((user) => {
		const filteredPosts = posts.filter((post) => post.author.id === user.id);
		return paginate(filteredPosts, {
			params: { slug: user.slug },
			props: { user: user },
			pageSize: POSTS_PER_PAGE
		});
	});
}
// All paginated data is passed on the "page" prop
const { page, user } = Astro.props;
const pagination = generatePagination(posts.length, page.currentPage, POSTS_PER_PAGE);
const title = `Posts written by ${user.name}`;
const subTitle = `Page ${page.currentPage} of ${page.lastPage}`;
if (page.currentPage === 1) {
	return Astro.redirect('/author/' + user.slug + '/');
}
---

<BaseLayout title={title + ' - ' + subTitle} description={title + ' - ' + subTitle}>
	<div class='container'>
		<div class='mb-12'>
			<h2 class='text-gray-700 font-semibold text-xl mb-4 flex justify-between gap-3'>
				<div>{title}</div>
				<div>{subTitle}</div>
			</h2>
			{
				page.data.length > 0 ? (
					<>
						<div class='grid grid-cols-3 gap-6' transition:name='post-grid'>
							{page.data.map((post: SimplifiedPost) => (
								<div class='col-span-3 md:col-span-1'>
									<Post post={post} />
								</div>
							))}
						</div>
						<Pagination pagination={pagination} basePath={`/author/${user.slug}/`} />
					</>
				) : (
					<div class='p-8 text-center'>No posts yet</div>
				)
			}
		</div>
	</div>
</BaseLayout>
