---
import { Image } from "astro:assets";
import type { SimplifiedPost } from "@src/lib/types";
import Author from "../../common/Author.astro";
import FormattedDate from "../../common/FormattedDate.astro";
import { calculateReadingTime } from "@src/lib/utils";

interface Props {
  source: SimplifiedPost[];
  type?: "category-post" | "tag-post" | "latest-post";
  slug?: string;
}
const { source = [], type = "latest-post", slug } = Astro.props;

const featuredPost = (() => {
  if (type === "latest-post") {
    return source[0];
  } else {
    if (!slug) {
      return null;
    }
    return null;
  }
})();
---

{
  featuredPost && (
    <div class="grid grid-cols-2 items-center gap-4 mb-12">
      <div class="col-span-1 flex flex-col gap-4">
        <div class="flex gap-2 items-center">
          {featuredPost.categories.slice(0, 2).map((category) => (
            <a
              class="
                px-3 py-1.5 rounded-md
                leading-none whitespace-nowrap
                bg-gray-50 border border-gray-100
                font-medium text-gray-700 text-sm transition duration-500
                hover:bg-sky-500 hover:text-white hover:border-sky-500"
              href={`/category/${category.slug}`}
            >
              {category.name}
            </a>
          ))}
        </div>
        <h1 class="text-4xl font-black capitalize text-pretty">
          <a
            href={featuredPost.slug}
            set:html={featuredPost.title}
            class="transition duration-500 hover:text-sky-600"
          />
        </h1>
        <div set:html={featuredPost.excerpt} class="text-gray-700" />
        <div class="flex gap-4 items-center">
          <Author details={featuredPost.author} picSize="md" />
          <div class="rounded-full size-1.5 bg-gray-300" />
          <div class="text-gray-600 text-sm">
            <FormattedDate date={featuredPost.date} format="long" />
          </div>
          <div class="rounded-full size-1.5 bg-gray-300" />
          <div class="text-gray-600 text-sm">
            {calculateReadingTime(featuredPost.content)} min read
          </div>
        </div>
      </div>
      <div class="col-span-1 max-h-[350px] overflow-hidden rounded-2xl">
        {featuredPost.featuredImage && (
          <a href={`/${featuredPost.slug}/`}>
            <Image
              src={featuredPost.featuredImage?.sourceUrl}
              alt={featuredPost.title}
              width={1000}
              class="w-full object-cover transition-transform hover:scale-110 hover:rotate-2 duration-500"
              height={700}
            />
          </a>
        )}
      </div>
    </div>
  )
}
