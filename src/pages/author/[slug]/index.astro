---
import { POSTS_PER_PAGE } from 'astro:env/server';
import { users, posts } from '@src/lib/data';
import BaseLayout from '@src/layouts/BaseLayout.astro';
import { generatePagination } from '@src/lib/utils';
import Post from '@src/components/common/Post.astro';
import Pagination from '@src/components/common/Pagination.astro';

export const getStaticPaths = () => {
	return users.map((user) => {
		return {
			params: { slug: user.slug },
			props: { user }
		};
	});
};

// All paginated data is passed on the "page" prop
const { user }: { [x: string]: any } = Astro.props;
const userPosts = posts.filter((post) => post.author.id === user.id);
const userPostsPageOne = userPosts.slice(0, POSTS_PER_PAGE);
const pagination = generatePagination(userPosts.length, 1, POSTS_PER_PAGE);
const title = `Posts written by ${user.name}`;
const subTitle = `Page ${1} of ${pagination.totalPages}`;
---

<BaseLayout title={title + ' - ' + subTitle} description={title + ' - ' + subTitle}>
	<div class='container'>
		<div class='mb-12'>
			<h2 class='text-gray-700 font-semibold text-xl mb-4 flex justify-between gap-3'>
				<div>{title}</div>
				<div>{subTitle}</div>
			</h2>
			{
				userPostsPageOne.length > 0 ? (
					<>
						<div class='grid grid-cols-3 gap-6' transition:name='post-grid'>
							{userPostsPageOne.map((post) => (
                <div class="col-span-3 md:col-span-1">
  								<Post post={post} />
                </div>
							))}
						</div>
						<Pagination pagination={pagination} basePath={`/author/${user.slug}/`} />
					</>
				) : (
					<div class='p-8 text-center'>No posts under this user yet</div>
				)
			}
		</div>
	</div>
</BaseLayout>
